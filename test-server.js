const express = require("express"); const cors = require("cors"); const app = express(); const PORT = 3000; app.use(cors()); app.use(express.json()); app.get("/health", (req, res) => { res.json({ status: "healthy", timestamp: new Date().toISOString(), service: "drilunia-backend-test" }); }); app.get("/api/test", (req, res) => { res.json({ message: "Â¡Backend Drilunia funcionando!", endpoints: { health: "/health", test: "/api/test", ice: "/api/ice" } }); }); app.get("/api/ice", (req, res) => { res.json({ iceServers: [{ urls: "stun:stun.l.google.com:19302" }, { urls: "stun:stun1.l.google.com:19302" }] }); }); app.post("/api/auth/login", (req, res) => { const { email, password } = req.body; if (email === "test@drilunia.com" && password === "test123") { res.json({ success: true, message: "Login exitoso", data: { user: { id: "test-user-id", email: email, username: "testuser", displayName: "Usuario de Prueba" }, tokens: { accessToken: "test-access-token", refreshToken: "test-refresh-token" } } }); } else { res.status(401).json({ success: false, message: "Credenciales invÃ¡lidas" }); } }); app.listen(PORT, () => { console.log(`ðŸš€ Servidor de prueba Drilunia iniciado en puerto ${PORT}`); console.log(`ðŸ“¡ API disponible en http://localhost:${PORT}/api`); console.log(`ðŸ’š Health check en http://localhost:${PORT}/health`); });
